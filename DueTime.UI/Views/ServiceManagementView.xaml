<UserControl x:Class="DueTime.UI.Views.ServiceManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DueTime.UI.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Header -->
        <TextBlock Grid.Row="0" 
                   Text="Background Service Management" 
                   FontSize="24" 
                   FontWeight="SemiBold" 
                   Margin="0,0,0,20"/>
        
        <!-- Service Status -->
        <StackPanel Grid.Row="1" Margin="0,0,0,20">
            <TextBlock Text="Service Status:" FontWeight="SemiBold" Margin="0,0,0,5"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <Ellipse Grid.Column="0" 
                         Width="16" 
                         Height="16" 
                         Margin="0,0,10,0" 
                         VerticalAlignment="Center"
                         Fill="{Binding ServiceStatusColor}"/>
                
                <TextBlock Grid.Column="1" 
                           Text="{Binding ServiceStatusText}" 
                           VerticalAlignment="Center"/>
            </Grid>
        </StackPanel>
        
        <!-- Service Description -->
        <StackPanel Grid.Row="2" Margin="0,0,0,20">
            <TextBlock Text="About the Background Service:" FontWeight="SemiBold" Margin="0,0,0,5"/>
            <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
                The DueTime background service allows time tracking to continue even when the main application is closed.
                This ensures you never miss any activity and provides more accurate time tracking data.
            </TextBlock>
            
            <TextBlock TextWrapping="Wrap" Margin="0,0,0,5">
                <Run FontWeight="SemiBold">Benefits:</Run>
            </TextBlock>
            <BulletDecorator Margin="10,0,0,5">
                <BulletDecorator.Bullet>
                    <Ellipse Width="6" Height="6" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </BulletDecorator.Bullet>
                <TextBlock Margin="10,0,0,0" TextWrapping="Wrap">Continuous tracking without the main application running</TextBlock>
            </BulletDecorator>
            <BulletDecorator Margin="10,0,0,5">
                <BulletDecorator.Bullet>
                    <Ellipse Width="6" Height="6" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </BulletDecorator.Bullet>
                <TextBlock Margin="10,0,0,0" TextWrapping="Wrap">Lower resource usage when you don't need the full UI</TextBlock>
            </BulletDecorator>
            <BulletDecorator Margin="10,0,0,5">
                <BulletDecorator.Bullet>
                    <Ellipse Width="6" Height="6" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </BulletDecorator.Bullet>
                <TextBlock Margin="10,0,0,0" TextWrapping="Wrap">Automatic startup with Windows</TextBlock>
            </BulletDecorator>
        </StackPanel>
        
        <!-- Service Actions -->
        <StackPanel Grid.Row="3" Margin="0,0,0,20">
            <TextBlock Text="Service Actions:" FontWeight="SemiBold" Margin="0,0,0,10"/>
            
            <WrapPanel>
                <Button Content="Install Service" 
                        Width="150" 
                        Height="30" 
                        Margin="0,0,10,10"
                        Click="InstallService_Click"
                        IsEnabled="{Binding CanInstall}"/>
                
                <Button Content="Uninstall Service" 
                        Width="150" 
                        Height="30" 
                        Margin="0,0,10,10"
                        Click="UninstallService_Click"
                        IsEnabled="{Binding CanUninstall}"/>
                
                <Button Content="Start Service" 
                        Width="150" 
                        Height="30" 
                        Margin="0,0,10,10"
                        Click="StartService_Click"
                        IsEnabled="{Binding CanStart}"/>
                
                <Button Content="Stop Service" 
                        Width="150" 
                        Height="30" 
                        Margin="0,0,10,10"
                        Click="StopService_Click"
                        IsEnabled="{Binding CanStop}"/>
            </WrapPanel>
        </StackPanel>
        
        <!-- Auto-start Option -->
        <StackPanel Grid.Row="4" Margin="0,0,0,20">
            <CheckBox Content="Start service automatically with Windows" 
                      IsChecked="{Binding AutoStartEnabled}"
                      Click="AutoStart_Click"/>
            <TextBlock Text="Note: This will configure the service to start automatically when Windows starts."
                       Margin="20,5,0,0"
                       FontStyle="Italic"
                       TextWrapping="Wrap"
                       Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        </StackPanel>
        
        <!-- Operation Status -->
        <Border Grid.Row="5" 
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" 
                BorderThickness="1" 
                Padding="10"
                Margin="0,0,0,20"
                Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"
                Visibility="{Binding StatusMessageVisibility}">
            <StackPanel Orientation="Horizontal">
                <ProgressBar IsIndeterminate="{Binding IsOperationInProgress}" 
                             Width="20" 
                             Height="20" 
                             Margin="0,0,10,0"
                             Visibility="{Binding ProgressVisibility}"/>
                <TextBlock Text="{Binding StatusMessage}" 
                           TextWrapping="Wrap"
                           VerticalAlignment="Center"/>
            </StackPanel>
        </Border>
        
        <!-- Admin Rights Warning -->
        <Border Grid.Row="6" 
                BorderBrush="DarkOrange" 
                BorderThickness="1" 
                Padding="10"
                VerticalAlignment="Bottom"
                Background="#FFFFF0E0">
            <TextBlock TextWrapping="Wrap">
                <Run FontWeight="Bold">Note:</Run> Service management operations require administrator privileges. 
                You will be prompted to allow these operations when you click any of the action buttons.
            </TextBlock>
        </Border>
    </Grid>
</UserControl> 